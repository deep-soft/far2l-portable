# 2023-10-14 13:20
# add jumpword EditWrap
name: act-build - x64, x86
run-name: Build 2.5.2 - x64

env:
   client_payload_name: 'far2l'
   client_payload_tag: '2.5.2'
   client_payload_sha: 'cf96728'
   client_payload_repo: 'deep-soft/far2l'
   client_payload_date: '20231015'
   client_payload_url: 'deep-soft/far2l'
   client_payload_message: 'far2l portable'

on:
  workflow_dispatch:
    inputs:
      # if: ${{ inputs.PLUGINS_EXTRA }}
      PLUGINS_EXTRA: 
        description: PLUGINS_EXTRA
        type: boolean
        required: true
        default: false
      # if: ${{ inputs.release_all }}
      release_all:
        description: Release all
        type: boolean
        required: true
        default: false

jobs:
  build-chroot:
    name: build ${{ matrix.arch }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
          arch: [x86_64, x86]
          os: [ubuntu-latest]

    steps:
      - name: Checkout
        uses: deep-soft/checkout@v3

      - name: patch build_far2l.sh for run-after-cmake-before-package.sh
        shell: bash
        run: |
          sed -ibak '/find \$REPO_DIR -type d -path \"\*\/AppDir\"/i \\nbash ${GITHUB_WORKSPACE}/run-after-cmake-before-package.sh' ${GITHUB_WORKSPACE}/build_far2l.sh;
          cat ${GITHUB_WORKSPACE}/build_far2l.sh;

      - name: patch build_far2l.sh for PLUGINS_EXTRA
        if: ${{ inputs.PLUGINS_EXTRA }}
        shell: bash
        run: |
          sed -ibak "s!( cd \$plug!( mv far2l-\$plug \$plug \&\& \\n       cd \$plug!" ${GITHUB_WORKSPACE}/build_far2l.sh;
          #cat ${GITHUB_WORKSPACE}/build_far2l.sh;
          if [ ${{ inputs.PLUGINS_EXTRA }} ]; then
            echo "PLUGINS_EXTRA=true" >> $GITHUB_ENV;
          fi

      - name: Checkout far2l
        id: id_check_far2l
        uses: deep-soft/checkout@v3
        with:
          repository: ${{ env.client_payload_repo }}
          path: far2l

      - name: Checkout far2l get ref
        shell: bash
        run: |
         pushd far2l
         far2l_ref=$(/usr/bin/git log -1 --format='%H')
         echo "far2l_ref=$far2l_ref"

      - name: patch far2l existing extra plugins
        shell: bash
        run: |
          echo 'remove existing extra plugin folders'
          rm -R far2l/far2l-netcfgplugin;
          rm -R far2l/far2l-processes;
          rm -R far2l/far2l-sqlplugin;
          rm -R far2l/far2l-EditWrap;
          rm -R far2l/far2l-jumpword;
          echo 'remove existing extra plugin from CMakeLists.txt'
          sed -ibak 's!add_subdirectory (far2l-netcfgplugin)!# add_subdirectory (far2l-netcfgplugin)!' far2l/CMakeLists.txt;
          sed -ibak 's!add_subdirectory (far2l-processes)!# add_subdirectory (far2l-processes)!' far2l/CMakeLists.txt;
          sed -ibak 's!add_subdirectory (far2l-sqlplugin)!# add_subdirectory (far2l-sqlplugin)!' far2l/CMakeLists.txt;
          sed -ibak 's!add_subdirectory (far2l-EditWrap)!# add_subdirectory (far2l-EditWrap)!' far2l/CMakeLists.txt;
          sed -ibak 's!add_subdirectory (far2l-jumpword)!# add_subdirectory (far2l-jumpword)!' far2l/CMakeLists.txt;

      - name: Checkout and patch far2l extra plugins
        shell: bash
        run: |
          pushd far2l
          # https://github.com/VPROFi/netcfgplugin, # https://github.com/VPROFi/sqlplugin, # https://github.com/VPROFi/processes
          # far2l-netcfgplugin far2l-sqlplugin far2l-processes
          for plug in netcfgplugin sqlplugin processes ; do
            git clone --depth 1 https://github.com/deep-soft/far2l-$plug.git && \
            ( echo "mv far2l-$plug $plug" && \
              mv far2l-$plug $plug && \
              cd $plug && \
              find . -mindepth 1 -name 'src' -prune -o -exec rm -rf {} + && \
              mv src/* . && rm -rf src )
            echo "add_subdirectory($plug)" >> CMakeLists.txt
          done
          # https://github.com/axxie/far2l-jumpword
          # https://github.com/unxed/far2l-EditWrap
          # far2l-EditWrap far2l-jumpword
          for plug in EditWrap jumpword ; do
            git clone --depth 1 https://github.com/deep-soft/far2l-$plug.git && \
            ( echo "mv far2l-$plug $plug" && \
              mv far2l-$plug $plug )
            echo "add_subdirectory($plug)" >> CMakeLists.txt
          done
          echo "grep add_subdirectory CMakeLists.txt"
          grep "add_subdirectory" CMakeLists.txt
          # patch if_tunnel.h, add ip.h before
          echo 'patch if_tunnel.h, add ip.h before'
          sed -ibak 's!#include <linux/if_tunnel.h>!#include <linux/ip.h>\n#include <linux/if_tunnel.h>!' netcfgplugin/common/netlink.h
          echo 'grep /i.*.h netcfgplugin/common/netlink.h'
          grep '/i.*.h' netcfgplugin/common/netlink.h

          popd
          
      - name: Setup ccache
        uses: deep-soft/cache@v3
        with:
          path: ${{ github.workspace }}/.ccache
          key: ccache-${{ matrix.arch }}-${{ env.client_payload_sha }}
          restore-keys: |
            ccache-${{ matrix.arch }}-

      - name: Setup Alpine Linux for ${{ matrix.arch }}
        uses: deep-soft/setup-alpine@v1
        with:
          arch: ${{ matrix.arch }}
          packages: >
            git bash build-base ccache cmake coreutils findutils gawk grep libarchive-dev libnfs-dev libssh-dev
            libtree libxi-dev linux-headers neon-dev ninja-is-really-ninja patchelf pcre-dev perl samba-dev tar
            uchardet-dev wget xerces-c-dev xz
          shell-name: alpine.sh

      - name: Add extra build-deps to chroot
        shell: alpine.sh --root {0}
        run: |
          apk add --no-progress makeself quilt --repository=https://dl-cdn.alpinelinux.org/alpine/edge/testing

      - name: Build far2l inside chroot
        working-directory: ./far2l
        env:
          DATE: ${{ env.client_payload_date }}
          SHA:  ${{ env.client_payload_sha }}
          TAG:  ${{ env.client_payload_tag }}
          ARCH: ${{ matrix.arch }}
          CCACHE_DIR: ${{ github.workspace }}/.ccache
          DESTDIR: ${{ github.workspace }}/AppDir
          STANDALONE: true
        shell: alpine.sh {0}
        run: |
          export VERSION=${TAG}.git${DATE}
          export PKG_NAME=far2l_${VERSION}_${ARCH}
          bash -x ${GITHUB_WORKSPACE}/build_far2l.sh

      - name: Archive Release
        uses: deep-soft/zip-release@v2
        with:
          type: 'zip'
          filename: 'far2l-${{ matrix.arch }}.zip'
          directory: 'far2l/build/install'
          # archive name is ${{ env.ZIP_RELEASE_ARCHIVE }}

      - name: Upload artifact
        uses: deep-soft/upload-artifact@v3
        with:
          name: far2l-${{ matrix.arch }}
          path: |
            ./**/far2l*.tar*
          if-no-files-found: error

      - name: Publish Release
        continue-on-error: true
        uses: deep-soft/release-action@v1
        with:
          draft: ${{ env.DRAFT }}
          tag: ${{ env.client_payload_name }}-${{ env.client_payload_tag }}
          allowUpdates: true
          artifacts: |
            ./**/far2l*.tar
            ${{ env.ZIP_RELEASE_ARCHIVE }}

  release:
    if: ${{ inputs.release_all }}
    name: Upload release all
    needs: [build-chroot]
    permissions:
      contents: write
    runs-on: ubuntu-latest

    steps:
      - name: Download artifacts
        uses: deep-soft/download-artifact@v3

      - name: Store .tar files
        id: store
        uses: andelf/nightly-release@main
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          URL: ${{ env.client_payload_url }}
          MESSAGE: ${{ env.client_payload_message }}
        with:
          prerelease: false
          tag_name: latest
          name: ${{ env.client_payload_date }}
          body: |
            ${{ env.URL }}: ${{ env.MESSAGE }}
          files: |
            ./**/far2l_*.run.tar

      - name: Delete workflow runs
        uses: Mattraks/delete-workflow-runs@v2
        continue-on-error: true
